[
  {
    "Name": "TestPredicatePushDown",
    "Cases": [
      {
        "SQL": "select a, max(b) from t group by a having a > 1",
        "Result": [
          "Group#0 Schema:[test.t.a,Column#13]",
          "    Projection_3 input:[Group#1], test.t.a, Column#13",
          "Group#1 Schema:[Column#13,test.t.a]",
          "    Aggregation_2 input:[Group#2], group by:test.t.a, funcs:max(test.t.b), firstrow(test.t.a)",
          "Group#2 Schema:[test.t.a,test.t.b]",
          "    TiKVSingleGather_6 input:[Group#3], table:t",
          "Group#3 Schema:[test.t.a,test.t.b]",
          "    TableScan_10 table:t, pk col:test.t.a, cond:[gt(test.t.a, 1)]"
        ]
      },
      {
        "SQL": "select a, avg(b) from t group by a having a > 1 and max(b) > 10",
        "Result": [
          "Group#0 Schema:[test.t.a,Column#16]",
          "    Projection_5 input:[Group#1], test.t.a, Column#13",
          "Group#1 Schema:[test.t.a,Column#13,Column#14]",
          "    Projection_3 input:[Group#2], test.t.a, Column#13, Column#14",
          "Group#2 Schema:[Column#13,Column#14,test.t.a]",
          "    Selection_10 input:[Group#3], gt(Column#14, 10)",
          "Group#3 Schema:[Column#13,Column#14,test.t.a]",
          "    Aggregation_2 input:[Group#4], group by:test.t.a, funcs:avg(test.t.b), max(test.t.b), firstrow(test.t.a)",
          "Group#4 Schema:[test.t.a,test.t.b]",
          "    TiKVSingleGather_7 input:[Group#5], table:t",
          "Group#5 Schema:[test.t.a,test.t.b]",
          "    TableScan_12 table:t, pk col:test.t.a, cond:[gt(test.t.a, 1)]"
        ]
      },
      {
        "SQL": "select t1.a, t1.b, t2.b from t t1, t t2 where t1.a = t2.a and t2.b = t1.b and t1.a > 10 and t2.b > 10 and t1.a > t2.b",
        "Result": [
          "Group#0 Schema:[test.t.a,test.t.b,test.t.b]",
          "    Projection_5 input:[Group#1], test.t.a, test.t.b, test.t.b",
          "Group#1 Schema:[test.t.a,test.t.b,test.t.a,test.t.b]",
          "    Join_3 input:[Group#2,Group#3], inner join, equal:[eq(test.t.a, test.t.a) eq(test.t.b, test.t.b)], other cond:gt(test.t.a, test.t.b)",
          "Group#2 Schema:[test.t.a,test.t.b]",
          "    TiKVSingleGather_7 input:[Group#4], table:t1",
          "Group#4 Schema:[test.t.a,test.t.b]",
          "    Selection_14 input:[Group#5], gt(test.t.a, test.t.b), gt(test.t.b, 10)",
          "Group#5 Schema:[test.t.a,test.t.b]",
          "    TableScan_13 table:t1, pk col:test.t.a, cond:[gt(test.t.a, 10)]",
          "Group#3 Schema:[test.t.a,test.t.b]",
          "    TiKVSingleGather_9 input:[Group#6], table:t2",
          "Group#6 Schema:[test.t.a,test.t.b]",
          "    Selection_17 input:[Group#7], gt(test.t.a, test.t.b), gt(test.t.b, 10)",
          "Group#7 Schema:[test.t.a,test.t.b]",
          "    TableScan_16 table:t2, pk col:test.t.a, cond:[gt(test.t.a, 10)]"
        ]
      },
      {
        "SQL": "select t1.a, t1.b from t t1, t t2 where t1.a = t2.a and t1.a = 10 and t2.a = 5",
        "Result": [
          "Group#0 Schema:[test.t.a,test.t.b]",
          "    Projection_5 input:[Group#1], test.t.a, test.t.b",
          "Group#1 Schema:[test.t.a,test.t.b,test.t.a]",
          "    TableDual_22 rowcount:0"
        ]
      },
      {
        "SQL": "select a, f from t where f > 1",
        "Result": [
          "Group#0 Schema:[test.t.a,test.t.f]",
          "    Projection_3 input:[Group#1], test.t.a, test.t.f",
          "Group#1 Schema:[test.t.a,test.t.f]",
          "    TiKVSingleGather_5 input:[Group#2], table:t",
          "    TiKVSingleGather_7 input:[Group#3], table:t, index:f",
          "    TiKVSingleGather_9 input:[Group#4], table:t, index:f_g",
          "Group#2 Schema:[test.t.a,test.t.f]",
          "    Selection_10 input:[Group#5], gt(test.t.f, 1)",
          "Group#5 Schema:[test.t.a,test.t.f]",
          "    TableScan_4 table:t, pk col:test.t.a",
          "Group#3 Schema:[test.t.a,test.t.f]",
          "    IndexScan_13 table:t, index:f, cond:[gt(test.t.f, 1)]",
          "Group#4 Schema:[test.t.a,test.t.f]",
          "    IndexScan_14 table:t, index:f, g, cond:[gt(test.t.f, 1)]"
        ]
      },
      {
        "SQL": "select a, f from t where g > 1 and f > 1",
        "Result": [
          "Group#0 Schema:[test.t.a,test.t.f]",
          "    Projection_3 input:[Group#1], test.t.a, test.t.f",
          "Group#1 Schema:[test.t.a,test.t.f,test.t.g]",
          "    TiKVSingleGather_5 input:[Group#2], table:t",
          "    TiKVSingleGather_7 input:[Group#3], table:t, index:f_g",
          "Group#2 Schema:[test.t.a,test.t.f,test.t.g]",
          "    Selection_8 input:[Group#4], gt(test.t.f, 1), gt(test.t.g, 1)",
          "Group#4 Schema:[test.t.a,test.t.f,test.t.g]",
          "    TableScan_4 table:t, pk col:test.t.a",
          "Group#3 Schema:[test.t.a,test.t.f,test.t.g]",
          "    Selection_11 input:[Group#5], gt(test.t.g, 1)",
          "Group#5 Schema:[test.t.a,test.t.f,test.t.g]",
          "    IndexScan_10 table:t, index:f, g, cond:[gt(test.t.f, 1)]"
        ]
      },
      {
        "SQL": "select t1.a, t1.b from t t1, t t2 where t1.a = t2.a and t1.a = 10 and t2.a = 5",
        "Result": [
          "Group#0 Schema:[test.t.a,test.t.b]",
          "    Projection_5 input:[Group#1], test.t.a, test.t.b",
          "Group#1 Schema:[test.t.a,test.t.b,test.t.a]",
          "    TableDual_22 rowcount:0"
        ]
      }
    ]
  },
  {
    "Name": "TestAggPushDownGather",
    "Cases": [
      {
        "SQL": "select b, sum(a) from t group by b",
        "Result": [
          "Group#0 Schema:[test.t.b,Column#13], UniqueKey:[test.t.b]",
          "    Projection_3 input:[Group#1], test.t.b, Column#13",
          "Group#1 Schema:[Column#13,test.t.b], UniqueKey:[test.t.b]",
          "    Aggregation_2 input:[Group#2], group by:test.t.b, funcs:sum(test.t.a), firstrow(test.t.b)",
          "    Aggregation_7 input:[Group#3], group by:test.t.b, funcs:sum(Column#14), firstrow(test.t.b)",
          "Group#2 Schema:[test.t.a,test.t.b], UniqueKey:[test.t.a]",
          "    TiKVSingleGather_5 input:[Group#4], table:t",
          "Group#4 Schema:[test.t.a,test.t.b], UniqueKey:[test.t.a]",
          "    TableScan_4 table:t, pk col:test.t.a",
          "Group#3 Schema:[Column#14,test.t.b]",
          "    TiKVSingleGather_5 input:[Group#5], table:t",
          "Group#5 Schema:[Column#14,test.t.b]",
          "    Aggregation_6 input:[Group#4], group by:test.t.b, funcs:sum(test.t.a)"
        ]
      },
      {
        "SQL": "select b, sum(a) from t group by c, b",
        "Result": [
          "Group#0 Schema:[test.t.b,Column#13]",
          "    Projection_3 input:[Group#1], test.t.b, Column#13",
          "Group#1 Schema:[Column#13,test.t.b]",
          "    Aggregation_2 input:[Group#2], group by:test.t.b, test.t.c, funcs:sum(test.t.a), firstrow(test.t.b)",
          "    Aggregation_7 input:[Group#3], group by:test.t.b, test.t.c, funcs:sum(Column#14), firstrow(test.t.b)",
          "Group#2 Schema:[test.t.a,test.t.b,test.t.c], UniqueKey:[test.t.a]",
          "    TiKVSingleGather_5 input:[Group#4], table:t",
          "Group#4 Schema:[test.t.a,test.t.b,test.t.c], UniqueKey:[test.t.a]",
          "    TableScan_4 table:t, pk col:test.t.a",
          "Group#3 Schema:[Column#14,test.t.c,test.t.b]",
          "    TiKVSingleGather_5 input:[Group#5], table:t",
          "Group#5 Schema:[Column#14,test.t.c,test.t.b]",
          "    Aggregation_6 input:[Group#4], group by:test.t.b, test.t.c, funcs:sum(test.t.a)"
        ]
      }
    ]
  },
  {
    "Name": "TestTopNRules",
    "Cases": [
      {
        "SQL": "select b from t order by a limit 2",
        "Result": [
          "Group#0 Schema:[test.t.b]",
          "    Projection_5 input:[Group#1], test.t.b",
          "Group#1 Schema:[test.t.b,test.t.a]",
          "    Projection_2 input:[Group#2], test.t.b, test.t.a",
          "Group#2 Schema:[test.t.a,test.t.b]",
          "    TopN_9 input:[Group#3], test.t.a:asc, offset:0, count:2",
          "Group#3 Schema:[test.t.a,test.t.b]",
          "    TiKVSingleGather_7 input:[Group#4], table:t",
          "Group#4 Schema:[test.t.a,test.t.b]",
          "    TableScan_6 table:t, pk col:test.t.a"
        ]
      },
      {
        "SQL": "select a+b from t order by a limit 1 offset 2",
        "Result": [
          "Group#0 Schema:[Column#14]",
          "    Projection_5 input:[Group#1], Column#13",
          "Group#1 Schema:[Column#13,test.t.a]",
          "    Projection_2 input:[Group#2], plus(test.t.a, test.t.b)->Column#13, test.t.a",
          "Group#2 Schema:[test.t.a,test.t.b]",
          "    TopN_9 input:[Group#3], test.t.a:asc, offset:2, count:1",
          "Group#3 Schema:[test.t.a,test.t.b]",
          "    TiKVSingleGather_7 input:[Group#4], table:t",
          "Group#4 Schema:[test.t.a,test.t.b]",
          "    TableScan_6 table:t, pk col:test.t.a"
        ]
      },
      {
        "SQL": "select c from t order by t.a limit 1",
        "Result": [
          "Group#0 Schema:[test.t.c]",
          "    Projection_5 input:[Group#1], test.t.c",
          "Group#1 Schema:[test.t.c,test.t.a]",
          "    Projection_2 input:[Group#2], test.t.c, test.t.a",
          "Group#2 Schema:[test.t.a,test.t.c]",
          "    TopN_11 input:[Group#3], test.t.a:asc, offset:0, count:1",
          "Group#3 Schema:[test.t.a,test.t.c]",
          "    TiKVSingleGather_7 input:[Group#4], table:t",
          "    TiKVSingleGather_9 input:[Group#5], table:t, index:c_d_e",
          "Group#4 Schema:[test.t.a,test.t.c]",
          "    TableScan_6 table:t, pk col:test.t.a",
          "Group#5 Schema:[test.t.a,test.t.c]",
          "    IndexScan_8 table:t, index:c, d, e"
        ]
      },
      {
        "SQL": "select c from t order by t.a + t.b limit 1",
        "Result": [
          "Group#0 Schema:[test.t.c]",
          "    Projection_5 input:[Group#1], test.t.c",
          "Group#1 Schema:[test.t.c,test.t.a,test.t.b]",
          "    Projection_2 input:[Group#2], test.t.c, test.t.a, test.t.b",
          "Group#2 Schema:[test.t.a,test.t.b,test.t.c]",
          "    TopN_9 input:[Group#3], plus(test.t.a, test.t.b):asc, offset:0, count:1",
          "Group#3 Schema:[test.t.a,test.t.b,test.t.c]",
          "    TiKVSingleGather_7 input:[Group#4], table:t",
          "Group#4 Schema:[test.t.a,test.t.b,test.t.c]",
          "    TableScan_6 table:t, pk col:test.t.a"
        ]
      }
    ]
  },
  {
    "Name": "TestProjectionElimination",
    "Cases": [
      {
        "SQL": "select a, b from (select a, b from t) as t2",
        "Result": [
          "Group#0 Schema:[test.t.a,test.t.b]",
          "    TableScan_1 table:t"
        ]
      },
      {
        "SQL": "select a+b from (select a, b from t) as t2",
        "Result": [
          "Group#0 Schema:[Column#13]",
          "    Projection_3 input:[Group#1], plus(test.t.a, test.t.b)->Column#13",
          "Group#1 Schema:[test.t.a,test.t.b]",
          "    TableScan_1 table:t"
        ]
      },
      {
        "SQL": "select a from (select a, b from (select a, b, c from t) as t2) as t3",
        "Result": [
          "Group#0 Schema:[test.t.a]",
          "    TableScan_1 table:t"
        ]
      }
    ]
  },
  {
    "Name": "TestMergeAggregationProjection",
    "Cases": [
      {
        "SQL": "select b, max(a) from (select a, c+d as b from t as t1) as t2 group by b",
        "Result": [
          "Group#0 Schema:[Column#13,Column#14]",
          "    Projection_4 input:[Group#1], Column#13, Column#14",
          "Group#1 Schema:[Column#14,Column#13]",
          "    Aggregation_5 input:[Group#2], group by:plus(test.t.c, test.t.d), funcs:max(test.t.a), firstrow(plus(test.t.c, test.t.d))",
          "Group#2 Schema:[test.t.a,test.t.c,test.t.d]",
          "    TableScan_1 table:t1"
        ]
      },
      {
        "SQL": "select max(a) from (select c+d as b, a+c as a from t as t1) as t2",
        "Result": [
          "Group#0 Schema:[Column#15]",
          "    Projection_4 input:[Group#1], Column#15",
          "Group#1 Schema:[Column#15]",
          "    Aggregation_5 input:[Group#2], funcs:max(plus(test.t.a, test.t.c))",
          "Group#2 Schema:[test.t.a,test.t.c]",
          "    TableScan_1 table:t1"
        ]
      },
      {
        "SQL": "select b, max(a) from (select a, c+d as b, @i:=0 from t as t1) as t2 group by b",
        "Result": [
          "Group#0 Schema:[Column#13,Column#15]",
          "    Projection_4 input:[Group#1], Column#13, Column#15",
          "Group#1 Schema:[Column#15,Column#13]",
          "    Aggregation_3 input:[Group#2], group by:Column#13, funcs:max(test.t.a), firstrow(Column#13)",
          "Group#2 Schema:[test.t.a,Column#13,Column#14]",
          "    Projection_2 input:[Group#3], test.t.a, plus(test.t.c, test.t.d)->Column#13, setvar(i, 0)->Column#14",
          "Group#3 Schema:[test.t.a,test.t.c,test.t.d]",
          "    TableScan_1 table:t1"
        ]
      }
    ]
  }
]
