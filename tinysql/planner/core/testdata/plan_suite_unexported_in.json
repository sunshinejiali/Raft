[
  {
    "name": "TestEagerAggregation",
    "cases": [
      "select sum(t.a), sum(t.a+1), sum(t.a), count(t.a), sum(t.a) + count(t.a) from t",
      "select sum(t.a + t.b), sum(t.a + t.c), sum(t.a + t.b), count(t.a) from t having sum(t.a + t.b) > 0 order by sum(t.a + t.c)",
      "select sum(a.a) from t a, t b where a.c = b.c",
      "select sum(b.a) from t a, t b where a.c = b.c",
      "select sum(b.a), a.a from t a, t b where a.c = b.c",
      "select sum(a.a), b.a from t a, t b where a.c = b.c",
      "select sum(a.a), sum(b.a) from t a, t b where a.c = b.c",
      "select sum(a.a), max(b.a) from t a, t b where a.c = b.c",
      "select max(a.a), sum(b.a) from t a, t b where a.c = b.c",
      "select sum(a.a) from t a, t b, t c where a.c = b.c and b.c = c.c",
      "select sum(b.a) from t a left join t b on a.c = b.c",
      "select sum(a.a) from t a left join t b on a.c = b.c",
      "select sum(a.a) from t a right join t b on a.c = b.c",
      "select sum(a) from (select * from t) x",
      "select max(a.b), max(b.b) from t a join t b on a.c = b.c group by a.a",
      "select max(a.b), max(b.b) from t a join t b on a.a = b.a group by a.c",
      "select max(a.c) from t a join t b on a.a=b.a and a.b=b.b group by a.b",
      "select t1.a, count(t2.b) from t t1, t t2 where t1.a = t2.a group by t1.a"
    ]
  },
  {
    "name": "TestPlanBuilder",
    "cases": [
      "delete from t where t.a >= 1000 order by t.a desc limit 10",
      // The correctness of explain result is checked at integration test. There is to improve coverage.
      "explain select /*+ TIDB_INLJ(t1, t2) */ * from t t1 left join t t2 on t1.a=t2.a where t1.b=1 and t2.b=1 and (t1.c=1 or t2.c=1)",
      "explain select /*+ TIDB_HJ(t1, t2) */ * from t t1 left join t t2 on t1.a=t2.a where t1.b=1 and t2.b=1 and (t1.c=1 or t2.c=1)",
      "explain select /*+ TIDB_SMJ(t1, t2) */ * from t t1 right join t t2 on t1.a=t2.a where t1.b=1 and t2.b=1 and (t1.c=1 or t2.c=1)",
      "explain format=\"dot\" select /*+ TIDB_SMJ(t1, t2) */ * from t t1, t t2 where t1.a=t2.a",
      "explain select * from t order by b",
      "explain select * from t order by b limit 1",
      "explain format=\"dot\" select * from t order by a",
      "insert into t select * from t",
      "select * from t t1, t t2 where 1 = 0"
    ]
  },
  {
    "name": "TestPredicatePushDown",
    "cases": [
      "select count(*) from t a, t b where a.a = b.a",
      "select * from t ta join t tb on ta.d = tb.d and ta.d > 1 where tb.a = 0",
      "select * from t ta join t tb on ta.d = tb.d where ta.d > 1 and tb.a = 0",
      "select * from t ta left outer join t tb on ta.d = tb.d and ta.d > 1 where tb.a = 0",
      "select * from t ta right outer join t tb on ta.d = tb.d and ta.a > 1 where tb.a = 0",
      "select * from t ta left outer join t tb on ta.d = tb.d and ta.a > 1 where ta.d = 0",
      "select * from t ta left outer join t tb on ta.d = tb.d and ta.a > 1 where tb.d = 0",
      "select * from t ta left outer join t tb on ta.d = tb.d and ta.a > 1 where tb.c is not null and tb.c = 0 and ifnull(tb.d, 1)",
      "select * from t ta left outer join t tb on ta.a = tb.a left outer join t tc on tb.b = tc.b where tc.c > 0",
      "select * from t ta left outer join t tb on ta.a = tb.a left outer join t tc on tc.b = ta.b where tb.c > 0",
      "select * from t ta left outer join t tb on ta.d = tb.d and ta.a > 1 where ifnull(tb.d, 1) or tb.d is null",
      "select a, count(a) cnt from t group by a having cnt < 1",
      // issue #3873
      "select t1.a, t2.a from t as t1 left join t as t2 on t1.a = t2.a where t1.a < 1.0",
      // issue #7728
      "select * from t t1 join t t2 on t1.a = t2.a where t2.a = null"
    ]
  },
  {
    "name": "TestTopNPushDown",
    "cases": [
      // Test TopN + Selection.
      "select * from t where a < 1 order by b limit 5",
      // Test Limit + Selection.
      "select * from t where a < 1 limit 5",
      // Test Limit + Agg + Proj .
      "select a, count(b) from t group by b limit 5",
      // Test TopN + Agg + Proj .
      "select a, count(b) from t group by b order by c limit 5",
      // Test TopN + Join + Proj.
      "select * from t, t s order by t.a limit 5",
      // Test Limit + Join + Proj.
      "select * from t, t s limit 5",
      // Test TopN + Left Join + Proj.
      "select * from t left outer join t s on t.a = s.a order by t.a limit 5",
      // Test TopN + Left Join + Proj.
      "select * from t left outer join t s on t.a = s.a order by t.a limit 5, 5",
      // Test Limit + Left Join + Proj.
      "select * from t left outer join t s on t.a = s.a limit 5",
      // Test TopN + Right Join + Proj.
      "select * from t right outer join t s on t.a = s.a order by s.a limit 5",
      // Test Limit + Right Join + Proj.
      "select * from t right outer join t s on t.a = s.a order by s.a,t.b limit 5",
      // Test `ByItem` containing column from both sides.
      "select ifnull(t1.b, t2.a) from t t1 left join t t2 on t1.e=t2.e order by ifnull(t1.b, t2.a) limit 5",
      // Test ifnull cannot be eliminated
      "select ifnull(t1.h, t2.b) from t t1 left join t t2 on t1.e=t2.e order by ifnull(t1.h, t2.b) limit 5"
    ]
  },
  {
    "name": "TestUniqueKeyInfo",
    "cases": [
      "select a, sum(e) from t group by b",
      "select a, b, sum(f) from t group by b",
      "select c, d, e, sum(a) from t group by c, d, e",
      "select f, g, sum(a) from t",
      "select * from t t1 join t t2 on t1.a = t2.e",
      "select f from t having sum(a) > 0",
      "select * from t t1 left join t t2 on t1.a = t2.a"
    ]
  },
  {
    "name": "TestAggPrune",
    "cases": [
      "select a, count(b) from t group by a",
      "select sum(b) from t group by c, d, e",
      "select tt.a, sum(tt.b) from (select a, b from t) tt group by tt.a",
      "select count(1) from (select count(1), a as b from t group by a) tt group by b",
      "select a, count(b) from t group by a"
    ]
  },
  {
    "name": "TestColumnPruning",
    "cases": [
      "select count(*) from t group by a",
      "select count(*) from t",
      "select count(*) from t a join t b where a.a < 1",
      "select count(*) from t a join t b on a.a = b.d",
      "select count(*) from t a join t b on a.a = b.d order by sum(a.d)",
      "select count(b.a) from t a join t b on a.a = b.d group by b.b order by sum(a.d)",
      "select a as c1, b as c2 from t order by 1, c1 + c2 + c"
    ]
  },
  {
    "name": "TestDeriveNotNullConds",
    "cases": [
      "select * from t t1 inner join t t2 on t1.e = t2.e",
      "select * from t t1 inner join t t2 on t1.e > t2.e",
      "select * from t t1 inner join t t2 on t1.e = t2.e and t1.e is not null",
      "select * from t t1 left join t t2 on t1.e = t2.e",
      "select * from t t1 left join t t2 on t1.e > t2.e",
      "select * from t t1 left join t t2 on t1.e = t2.e and t2.e is not null",
      "select * from t t1 right join t t2 on t1.e = t2.e and t1.e is not null",
      // Not deriving if column has NotNull flag already.
      "select * from t t1 inner join t t2 on t1.b = t2.b",
      "select * from t t1 left join t t2 on t1.b = t2.b",
      "select * from t t1 left join t t2 on t1.b > t2.b"
    ]
  },
  {
    "name": "TestJoinPredicatePushDown",
    "cases": [
      // issue #7628, inner join
      "select * from t as t1 join t as t2 on t1.b = t2.b where t1.a > t2.a",
      "select * from t as t1 join t as t2 on t1.b = t2.b where t1.a=1 or t2.a=1",
      "select * from t as t1 join t as t2 on t1.b = t2.b where (t1.a=1 and t2.a=1) or (t1.a=2 and t2.a=2)",
      "select * from t as t1 join t as t2 on t1.b = t2.b where (t1.c=1 and (t1.a=3 or t2.a=3)) or (t1.a=2 and t2.a=2)",
      "select * from t as t1 join t as t2 on t1.b = t2.b where (t1.c=1 and ((t1.a=3 and t2.a=3) or (t1.a=4 and t2.a=4)))",
      "select * from t as t1 join t as t2 on t1.b = t2.b where (t1.a>1 and t1.a < 3 and t2.a=1) or (t1.a=2 and t2.a=2)",
      "select * from t as t1 join t as t2 on t1.b = t2.b and ((t1.a=1 and t2.a=1) or (t1.a=2 and t2.a=2))",
      // issue #7628, left join
      "select * from t as t1 left join t as t2 on t1.b = t2.b and ((t1.a=1 and t2.a=1) or (t1.a=2 and t2.a=2))",
      "select * from t as t1 left join t as t2 on t1.b = t2.b and t1.a > t2.a",
      "select * from t as t1 left join t as t2 on t1.b = t2.b and (t1.a=1 or t2.a=1)",
      "select * from t as t1 left join t as t2 on t1.b = t2.b and ((t1.c=1 and (t1.a=3 or t2.a=3)) or (t1.a=2 and t2.a=2))",
      "select * from t as t1 left join t as t2 on t1.b = t2.b and ((t2.c=1 and (t1.a=3 or t2.a=3)) or (t1.a=2 and t2.a=2))",
      "select * from t as t1 left join t as t2 on t1.b = t2.b and ((t1.c=1 and ((t1.a=3 and t2.a=3) or (t1.a=4 and t2.a=4))) or (t1.a=2 and t2.a=2))",
      // Duplicate condition would be removed.
      "select * from t t1 join t t2 on t1.a > 1 and t1.a > 1"
    ]
  },
  {
    "name": "TestJoinReOrder",
    "cases": [
      "select * from t t1, t t2, t t3, t t4, t t5, t t6 where t1.a = t2.b and t2.a = t3.b and t3.c = t4.a and t4.d = t2.c and t5.d = t6.d",
      "select * from t t1, t t2, t t3, t t4, t t5, t t6, t t7, t t8 where t1.a = t8.a",
      "select * from t t1, t t2, t t3, t t4, t t5 where t1.a = t5.a and t5.a = t4.a and t4.a = t3.a and t3.a = t2.a and t2.a = t1.a and t1.a = t3.a and t2.a = t4.a and t5.b < 8",
      "select * from t t1, t t2, t t3, t t4, t t5 where t1.a = t5.a and t5.a = t4.a and t4.a = t3.a and t3.a = t2.a and t2.a = t1.a and t1.a = t3.a and t2.a = t4.a and t3.b = 1 and t4.a = 1"
    ]
  },
  {
    "name": "TestOuterJoinEliminator",
    "cases": [
      // Test duplicate agnostic agg functions on join
      "select max(t1.a), min(test.t1.b) from t t1 left join t t2 on t1.b = t2.b",
      // Test left outer join
      "select t1.b from t t1 left outer join t t2 on t1.a = t2.a",
      // Test right outer join
      "select t2.b from t t1 right outer join t t2 on t1.a = t2.a",
      // For complex join query
      "select max(t3.b) from (t t1 left join t t2 on t1.a = t2.a) right join t t3 on t1.b = t3.b",
      "select t1.a ta, t1.b tb from t t1 left join t t2 on t1.a = t2.a",
      // Because the `order by` uses t2.a, the `join` can't be eliminated.
      "select t1.a, t1.b from t t1 left join t t2 on t1.a = t2.a order by t2.a"
    ]
  },
  {
    "name": "TestSimplifyOuterJoin",
    "cases": [
      "select * from t t1 left join t t2 on t1.b = t2.b where t1.c > 1 or t2.c > 1;",
      "select * from t t1 left join t t2 on t1.b = t2.b where t1.c > 1 and t2.c > 1;",
      "select * from t t1 left join t t2 on t1.b > 1 where t1.c = t2.c;"
    ]
  },
  {
    "name": "TestOuterWherePredicatePushDown",
    "cases": [
      // issue #7628, left join with where condition
      "select * from t as t1 left join t as t2 on t1.b = t2.b where (t1.a=1 and t2.a is null) or (t1.a=2 and t2.a=2)",
      "select * from t as t1 left join t as t2 on t1.b = t2.b where (t1.c=1 and (t1.a=3 or t2.a=3)) or (t1.a=2 and t2.a=2)",
      "select * from t as t1 left join t as t2 on t1.b = t2.b where (t1.c=1 and ((t1.a=3 and t2.a=3) or (t1.a=4 and t2.a=4))) or (t1.a=2 and t2.a is null)"
    ]
  }
]
